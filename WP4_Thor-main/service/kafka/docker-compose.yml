version: "3"
services:
  zookeeper:
    image: bitnami/zookeeper:3.6.2
    restart: always
    ports:
      - '2181:2181'
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    networks:
      - kafka-cluster
    volumes:
      - "zookeeper_data:/bitnami"
  kafka:
    image: bitnami/kafka:2.8.1
    restart: always
    ports:
      - '9093:9093'
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CLIENT:PLAINTEXT,EXTERNAL:PLAINTEXT
      - KAFKA_CFG_LISTENERS=CLIENT://:9092,EXTERNAL://0.0.0.0:9093
      - KAFKA_CFG_ADVERTISED_LISTENERS=CLIENT://kafka:9092,EXTERNAL://${KAFKA_ADVERTISE_ADDRESS}:9093
      - KAFKA_INTER_BROKER_LISTENER_NAME=CLIENT
      - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=true
    volumes:
      - kafka_data:/bitnami
    depends_on:
      - zookeeper
    networks:
      - kafka-cluster
  kafdrop:
    image: obsidiandynamics/kafdrop:latest
    restart: always
    ports:
      - '9000:9000'
    environment:
      - KAFKA_BROKERCONNECT=kafka:9092
    depends_on:
      - kafka
    networks:
      - kafka-cluster
  nginx:
    image: "nginx:alpine"
    restart: always
    ports:
      - '31313:80'
    links:
      - kafdrop:kafdrop
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx.htpasswd:/etc/nginx/.htpasswd:ro
    depends_on:
      - kafdrop
    networks:
      - kafka-cluster
networks:
  kafka-cluster:
    name: kafka-cluster
    driver: bridge
volumes:
  kafka_data:
  zookeeper_data:
